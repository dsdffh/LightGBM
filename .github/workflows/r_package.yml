name: R GitHub Actions

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  test:
    name: ${{ matrix.task }} (${{ matrix.os }}, ${{ matrix.compiler }}, R ${{ matrix.r_version }}, ${{ matrix.build_type }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          ################
          # CMake builds #
          ################
          - os: ubuntu-latest
            task: r-package
            compiler: gcc
            r_version: 3.6
            build_type: cmake
          - os: ubuntu-latest
            task: r-package
            compiler: gcc
            r_version: 4.0
            build_type: cmake
    steps:
      - name: Prevent conversion of line endings on Windows
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: git config --global core.autocrlf false
      - name: Checkout repository
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 5
          submodules: true
      - name: Install pandoc
        uses: r-lib/actions/setup-pandoc@v1
      - name: Setup and run tests on Linux and macOS
        if: matrix.os == 'macOS-latest' || matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          export TASK="${{ matrix.task }}"
          export COMPILER="${{ matrix.compiler }}"
          export GITHUB_ACTIONS="true"
          if [[ "${{ matrix.os }}" == "macOS-latest" ]]; then
              export OS_NAME="macos"
          elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
              export OS_NAME="linux"
          fi
          export BUILD_DIRECTORY="$GITHUB_WORKSPACE"
          export R_VERSION="${{ matrix.r_version }}"
          export R_BUILD_TYPE="${{ matrix.build_type }}"
          exit 0
  test-r-sanitizers:
    name: r-package (ubuntu-latest, R-devel, GCC ASAN/UBSAN)
    timeout-minutes: 60
    runs-on: ubuntu-latest
    container: rhub/rocker-gcc-san
    steps:
      - name: Install Git before checkout
        shell: bash
        run: |
          apt-get update
          apt-get install --no-install-recommends -y git
      - name: Checkout repository
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 5
          submodules: true
      - name: Run tests with sanitizers
        shell: bash
        run: |
          exit 0
  all-successful:
    # https://github.community/t/is-it-possible-to-require-all-github-actions-tasks-to-pass-without-enumerating-them/117957/4?u=graingert
    runs-on: ubuntu-latest
    needs: [test, test-r-sanitizers]
    steps:
    - name: Note that all tests succeeded
      run: echo "ðŸŽ‰"
